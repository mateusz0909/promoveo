// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// NOTE: This User model mirrors the 'auth.users' table from Supabase.
// We manage its creation through Supabase Auth, but use this model for relations.
model User {
  id        String    @id @default(uuid()) // Corresponds to the Supabase auth user ID
  email     String?   @unique
  createdAt DateTime? @map("created_at")

  projects Project[] // A user can have many projects
  templates Template[] @relation("TemplateCreator")
}

model Project {
  id                  String    @id @default(cuid())
  name                String
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  inputAppName        String
  inputAppDescription String
  language            String?
  device              String?
  generatedAsoText    Json? // Stores headings, descriptions, keywords as JSON
  landingPageConfig   Json?
  landingPageZipUrl   String?
  landingPageZipStoragePath String?
  landingPageZipUpdatedAt DateTime?

  // Relation to the user who owns it
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  generatedImages GeneratedImage[] // A project can have many images
}

model GeneratedImage {
  id                  String   @id @default(cuid())
  createdAt           DateTime @default(now())
  sourceScreenshotUrl String
  generatedImageUrl   String
  accentColor         String?  // To store the background accent color
  configuration       Json?    // Stores { "heading": "...", "font": "..." }
  templateVersionId   String?

  // Relation to the project it belongs to
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId String
  templateVersion TemplateVersion? @relation(fields: [templateVersionId], references: [id])
}

enum TemplateStatus {
  DRAFT
  REVIEW
  PUBLISHED
  ARCHIVED
}

model Template {
  id              String           @id @default(cuid())
  name            String
  slug            String           @unique
  description     String?
  status          TemplateStatus   @default(DRAFT)
  thumbnailUrl    String?
  supportedDevices String[]        @default(["iPhone", "iPad"])
  aspectRatios     String[]        @default(["9:19.5"])
  tags             String[]        @default([])
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  createdById     String?

  createdBy       User?            @relation("TemplateCreator", fields: [createdById], references: [id])
  versions        TemplateVersion[]
}

model TemplateVersion {
  id           String   @id @default(cuid())
  version      String
  changelog    String?
  schema       Json
  assets       Json?
  isDefault    Boolean  @default(false)
  publishedAt  DateTime?
  createdAt    DateTime @default(now())

  template   Template @relation(fields: [templateId], references: [id], onDelete: Cascade)
  templateId String

  generatedImages GeneratedImage[]
}